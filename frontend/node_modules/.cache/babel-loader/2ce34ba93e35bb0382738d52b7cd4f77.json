{"ast":null,"code":"var _jsxFileName = \"/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/UploadSection.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction UploadSection({\n  onCsvUploadSuccess\n}) {\n  const [csvFile, setCsvFile] = useState(null);\n  const handleCsvUpload = async event => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      const formData = new FormData();\n      formData.append('csvFile', file);\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload-csv', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data.success) {\n          setCsvFile(file); // Set CSV file locally if upload is successful\n          onCsvUploadSuccess(response.data.csv_content); // Notify parent component of upload\n          alert('CSV file uploaded successfully.');\n        } else {\n          alert('Error uploading CSV file.');\n        }\n      } catch (error) {\n        console.error('CSV upload error:', error);\n        alert('Error uploading CSV file.');\n      }\n    } else {\n      alert('Please upload a valid CSV file.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"csv-upload\",\n    className: \"upload-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Upload CSV\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"csv-upload\",\n    type: \"file\",\n    accept: \".csv\",\n    style: {\n      display: 'none'\n    },\n    onChange: handleCsvUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\nexport default UploadSection;","map":{"version":3,"names":["React","useState","axios","UploadSection","onCsvUploadSuccess","csvFile","setCsvFile","handleCsvUpload","event","file","target","files","type","formData","FormData","append","response","post","headers","data","success","csv_content","alert","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","style","display","onChange"],"sources":["/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/UploadSection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadSection({ onCsvUploadSuccess }) {\n  const [csvFile, setCsvFile] = useState(null);\n\n  const handleCsvUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      const formData = new FormData();\n      formData.append('csvFile', file);\n\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload-csv', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        if (response.data.success) {\n          setCsvFile(file); // Set CSV file locally if upload is successful\n          onCsvUploadSuccess(response.data.csv_content); // Notify parent component of upload\n          alert('CSV file uploaded successfully.');\n        } else {\n          alert('Error uploading CSV file.');\n        }\n      } catch (error) {\n        console.error('CSV upload error:', error);\n        alert('Error uploading CSV file.');\n      }\n    } else {\n      alert('Please upload a valid CSV file.');\n    }\n  };\n\n  return (\n    <div className=\"upload-section\">\n      <label htmlFor=\"csv-upload\" className=\"upload-btn\">Upload CSV</label>\n      <input\n        id=\"csv-upload\"\n        type=\"file\"\n        accept=\".csv\"\n        style={{ display: 'none' }}\n        onChange={handleCsvUpload}\n      />\n    </div>\n  );\n}\n\nexport default UploadSection;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMM,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;MACpC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEN,IAAI,CAAC;MAEhC,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;UAC9EK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;UACzBd,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;UAClBL,kBAAkB,CAACY,QAAQ,CAACG,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC;UAC/CC,KAAK,CAAC,iCAAiC,CAAC;QAC1C,CAAC,MAAM;UACLA,KAAK,CAAC,2BAA2B,CAAC;QACpC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCD,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACEtB,KAAA,CAAAyB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BhC,KAAA,CAAAyB,aAAA;IAAOQ,OAAO,EAAC,YAAY;IAACP,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAiB,CAAC,eACrEhC,KAAA,CAAAyB,aAAA;IACES,EAAE,EAAC,YAAY;IACftB,IAAI,EAAC,MAAM;IACXuB,MAAM,EAAC,MAAM;IACbC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAC3BC,QAAQ,EAAE/B,eAAgB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CACE,CAAC;AAEV;AAEA,eAAe7B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}
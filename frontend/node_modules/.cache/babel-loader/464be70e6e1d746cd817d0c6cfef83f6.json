{"ast":null,"code":"var _jsxFileName = \"/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/UploadSection.js\";\n// UploadSection.js\nimport React from 'react';\nimport axios from 'axios'; // Import axios for backend requests\n\nfunction UploadSection({\n  onCsvUpload\n}) {\n  const handleCsvUpload = async event => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      onCsvUpload(file); // Notify parent component\n      await uploadCsvToBackend(file); // Send to backend\n    } else {\n      alert('Please upload a valid CSV file.');\n    }\n  };\n  const uploadCsvToBackend = async file => {\n    const formData = new FormData();\n    formData.append('csvFile', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload_csv', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('CSV file uploaded successfully:', response.data);\n    } catch (error) {\n      console.error('Error uploading CSV file:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"csv-upload\",\n    className: \"upload-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Upload CSV\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"csv-upload\",\n    type: \"file\",\n    accept: \".csv\",\n    style: {\n      display: 'none'\n    },\n    onChange: handleCsvUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nexport default UploadSection;","map":{"version":3,"names":["React","axios","UploadSection","onCsvUpload","handleCsvUpload","event","file","target","files","type","uploadCsvToBackend","alert","formData","FormData","append","response","post","headers","console","log","data","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","style","display","onChange"],"sources":["/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/UploadSection.js"],"sourcesContent":["// UploadSection.js\nimport React from 'react';\nimport axios from 'axios'; // Import axios for backend requests\n\nfunction UploadSection({ onCsvUpload }) {\n  const handleCsvUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      onCsvUpload(file); // Notify parent component\n      await uploadCsvToBackend(file); // Send to backend\n    } else {\n      alert('Please upload a valid CSV file.');\n    }\n  };\n\n  const uploadCsvToBackend = async (file) => {\n    const formData = new FormData();\n    formData.append('csvFile', file);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload_csv', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      console.log('CSV file uploaded successfully:', response.data);\n    } catch (error) {\n      console.error('Error uploading CSV file:', error);\n    }\n  };\n\n  return (\n    <div className=\"upload-section\">\n      <label htmlFor=\"csv-upload\" className=\"upload-btn\">Upload CSV</label>\n      <input\n        id=\"csv-upload\"\n        type=\"file\"\n        accept=\".csv\"\n        style={{ display: 'none' }}\n        onChange={handleCsvUpload}\n      />\n    </div>\n  );\n}\n\nexport default UploadSection;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,SAASC,aAAaA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACtC,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;MACpCN,WAAW,CAACG,IAAI,CAAC,CAAC,CAAC;MACnB,MAAMI,kBAAkB,CAACJ,IAAI,CAAC,CAAC,CAAC;IAClC,CAAC,MAAM;MACLK,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,MAAMD,kBAAkB,GAAG,MAAOJ,IAAI,IAAK;IACzC,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAER,IAAI,CAAC;IAEhC,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;QAC9EK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAC/D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACErB,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B7B,KAAA,CAAAsB,aAAA;IAAOQ,OAAO,EAAC,YAAY;IAACP,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAiB,CAAC,eACrE7B,KAAA,CAAAsB,aAAA;IACES,EAAE,EAAC,YAAY;IACftB,IAAI,EAAC,MAAM;IACXuB,MAAM,EAAC,MAAM;IACbC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAC3BC,QAAQ,EAAE/B,eAAgB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CACE,CAAC;AAEV;AAEA,eAAe3B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}
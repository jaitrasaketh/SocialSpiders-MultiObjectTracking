{"ast":null,"code":"var _jsxFileName = \"/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/VideoPlayer.js\";\nimport React, { useState } from 'react';\nimport './VideoPlayer.css';\nfunction VideoPlayer() {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editOption, setEditOption] = useState(null);\n  const [boundingBox, setBoundingBox] = useState({\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0\n  });\n  const handleEditChange = event => {\n    setEditOption(event.target.value);\n  };\n  const saveBoundingBox = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/update-bounding-box\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          frame_id: 1,\n          // replace with actual frame ID\n          track_id: 1,\n          // replace with actual track ID\n          class_id: 1,\n          // replace with actual class ID\n          x1: boundingBox.x1,\n          y1: boundingBox.y1,\n          x2: boundingBox.x2,\n          y2: boundingBox.y2\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message);\n        setIsEditing(false); // End editing mode after saving\n      } else {\n        alert(result.error || \"Error updating bounding box\");\n      }\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    className: `video-element ${isEditing ? \"dimmed\" : \"\"}`,\n    controls: true\n    // Additional video attributes (e.g., src, onPlay, etc.)\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), isEditing && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: editOption,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Select Edit Option\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"redraw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Redraw Bounding Boxes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"editId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Edit ID\")), editOption === \"redraw\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"draw-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Click and drag to redraw bounding box.\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-btn\",\n    onClick: saveBoundingBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: () => setIsEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Edit\"));\n}\nexport default VideoPlayer;","map":{"version":3,"names":["React","useState","VideoPlayer","isEditing","setIsEditing","editOption","setEditOption","boundingBox","setBoundingBox","x1","y1","x2","y2","handleEditChange","event","target","value","saveBoundingBox","response","fetch","method","headers","body","JSON","stringify","frame_id","track_id","class_id","result","json","ok","alert","message","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","controls","onChange","disabled","onClick"],"sources":["/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './VideoPlayer.css';\n\nfunction VideoPlayer() {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editOption, setEditOption] = useState(null);\n  const [boundingBox, setBoundingBox] = useState({ x1: 0, y1: 0, x2: 0, y2: 0 });\n\n  const handleEditChange = (event) => {\n    setEditOption(event.target.value);\n  };\n\n  const saveBoundingBox = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/update-bounding-box\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          frame_id: 1, // replace with actual frame ID\n          track_id: 1, // replace with actual track ID\n          class_id: 1, // replace with actual class ID\n          x1: boundingBox.x1,\n          y1: boundingBox.y1,\n          x2: boundingBox.x2,\n          y2: boundingBox.y2,\n        }),\n      });\n\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message);\n        setIsEditing(false); // End editing mode after saving\n      } else {\n        alert(result.error || \"Error updating bounding box\");\n      }\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    }\n  };\n\n  return (\n    <div className=\"video-player\">\n      <video\n        className={`video-element ${isEditing ? \"dimmed\" : \"\"}`}\n        controls\n        // Additional video attributes (e.g., src, onPlay, etc.)\n      />\n\n      {isEditing && (\n        <div className=\"edit-overlay\">\n          <select value={editOption} onChange={handleEditChange}>\n            <option value=\"\" disabled>Select Edit Option</option>\n            <option value=\"redraw\">Redraw Bounding Boxes</option>\n            <option value=\"editId\">Edit ID</option>\n          </select>\n\n          {editOption === \"redraw\" && (\n            <div className=\"draw-area\">\n              {/* Placeholder for drawing functionality */}\n              <p>Click and drag to redraw bounding box.</p>\n              {/* Update boundingBox coordinates here */}\n            </div>\n          )}\n\n          <button className=\"save-btn\" onClick={saveBoundingBox}>\n            Save\n          </button>\n        </div>\n      )}\n\n      <button className=\"edit-btn\" onClick={() => setIsEditing(true)}>\n        Edit\n      </button>\n    </div>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
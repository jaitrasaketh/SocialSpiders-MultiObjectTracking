{"ast":null,"code":"var _jsxFileName = \"/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/UploadSection.js\";\n// UploadSection.js\nimport React from 'react';\nfunction UploadSection({\n  onCsvUpload\n}) {\n  const handleCsvUpload = async event => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      const formData = new FormData();\n      formData.append('csvFile', file);\n      try {\n        // Send the CSV file to the backend\n        const response = await fetch('http://localhost:5000/upload-csv', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          console.log(\"CSV file uploaded successfully\");\n          onCsvUpload(true); // Notify VideoPlayer about successful CSV upload\n        } else {\n          console.error(\"Failed to upload CSV file\");\n          onCsvUpload(false); // Notify VideoPlayer about failure\n        }\n      } catch (error) {\n        console.error(\"Error uploading CSV file:\", error);\n        onCsvUpload(false); // Notify VideoPlayer about failure\n      }\n    } else {\n      alert(\"Please upload a valid CSV file.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"csv-upload\",\n    className: \"upload-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Upload CSV\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"csv-upload\",\n    type: \"file\",\n    accept: \".csv\",\n    style: {\n      display: 'none'\n    },\n    onChange: handleCsvUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\nexport default UploadSection;","map":{"version":3,"names":["React","UploadSection","onCsvUpload","handleCsvUpload","event","file","target","files","type","formData","FormData","append","response","fetch","method","body","ok","console","log","error","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","style","display","onChange"],"sources":["/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/GUI/frontend/annotation-tool/src/components/UploadSection.js"],"sourcesContent":["// UploadSection.js\nimport React from 'react';\n\nfunction UploadSection({ onCsvUpload }) {\n  const handleCsvUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      const formData = new FormData();\n      formData.append('csvFile', file);\n\n      try {\n        // Send the CSV file to the backend\n        const response = await fetch('http://localhost:5000/upload-csv', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (response.ok) {\n          console.log(\"CSV file uploaded successfully\");\n          onCsvUpload(true);  // Notify VideoPlayer about successful CSV upload\n        } else {\n          console.error(\"Failed to upload CSV file\");\n          onCsvUpload(false);  // Notify VideoPlayer about failure\n        }\n      } catch (error) {\n        console.error(\"Error uploading CSV file:\", error);\n        onCsvUpload(false);  // Notify VideoPlayer about failure\n      }\n    } else {\n      alert(\"Please upload a valid CSV file.\");\n    }\n  };\n\n  return (\n    <div className=\"upload-section\">\n      <label htmlFor=\"csv-upload\" className=\"upload-btn\">Upload CSV</label>\n      <input\n        id=\"csv-upload\"\n        type=\"file\"\n        accept=\".csv\"\n        style={{ display: 'none' }}\n        onChange={handleCsvUpload}\n      />\n    </div>\n  );\n}\n\nexport default UploadSection;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACtC,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;MACpC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEN,IAAI,CAAC;MAEhC,IAAI;QACF;QACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACfC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;UAC7ChB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAE;QACtB,CAAC,MAAM;UACLe,OAAO,CAACE,KAAK,CAAC,2BAA2B,CAAC;UAC1CjB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAE;QACvB;MACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDjB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAE;MACvB;IACF,CAAC,MAAM;MACLkB,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACEpB,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B5B,KAAA,CAAAqB,aAAA;IAAOQ,OAAO,EAAC,YAAY;IAACP,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAiB,CAAC,eACrE5B,KAAA,CAAAqB,aAAA;IACES,EAAE,EAAC,YAAY;IACftB,IAAI,EAAC,MAAM;IACXuB,MAAM,EAAC,MAAM;IACbC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAC3BC,QAAQ,EAAE/B,eAAgB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CACE,CAAC;AAEV;AAEA,eAAe3B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}